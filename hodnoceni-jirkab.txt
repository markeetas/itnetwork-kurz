Ceníme práci na projektu! 🏆 Prohlédli jsme si kód a máme k němu následující poznámky:

1. Pojmenování identifikátorů - řekl bych, že Register je spíš registrace nebo její proces, zatímco ta evidence by mohla být Registry. Navíc se její instance uloží do proměnné evidence, aby se předala do konstruktoru UI, které si ji zase uloží do atributu register.
2. Dodržení principů SRP a SoC - NE, vypisování v třídě, která drží záznamy (seznam pojištěnců). V důsledku toho pak tuto třídu nelze později znovupoužít v jiném kontextu než je konzolová aplikace.
3. Vhodný výběr datových typů - věk je brán jen jako řetězec a není kontrolován, což znesnadňuje budoucí užití, např. vyhledání klientů v určitém věkovém rozmezí
4. Formátování kódu - ok
5. Duplicitní kód a nekonečné cykly - výpis hlavičky se opakuje na více místech v různých souborech
6. Validace vstupních dat - jen kontrola neprázdných řetězců
7. Logičnost a složitost - vyhledávání najde vždy nejvýše jeden záznam, i kdyby jich se stejným jménem a příjmením bylo víc. Rozdílné vypisování při vyhledání a ve výpisu všech pojištěnců (a na různých místech)
8. Komentáře - ano, na několika místech velmi stručný pydoc
9. Celkové hodnocení - doporučuji z vyhledávání vracet seznam nalezených záznamů, stejně jako při zobrazení všech, a sjednotit výpis z těchto dvou funkcí (v UI, nikoli v Registru). Pokud navíc připustíme hledání dle podřetězce namísto přesné shody, vystačí si Registr s jednou funkcí pro obojí. Hezké by také u pojišťovací aplikace bylo pracovat s věkem pojištěných.

Doporučujeme případné výtky v kódu opravit, abyste jej mohli pak prezentovat budoucímu zaměstnavateli v co nejlepší kvalitě. Pokud byste potřebovali s čímkoli pomoci, naplánujte si s námi konzultaci, rádi vám poradíme!
